{"version":3,"sources":["../../src/methods/update.ts"],"sourcesContent":["import { runMultipleHook, runSingleHook } from '../components/hooks.js'\nimport { createError } from '../errors.js'\nimport { Document, Orama } from '../types.js'\nimport { innerInsertMultiple, insert } from './insert.js'\nimport { remove, removeMultiple } from './remove.js'\n\nexport async function update(\n  orama: Orama,\n  id: string,\n  doc: Document,\n  language?: string,\n  skipHooks?: boolean,\n): Promise<string> {\n  if (!skipHooks && orama.beforeUpdate) {\n    await runSingleHook(orama.beforeUpdate, orama, id)\n  }\n\n  await remove(orama, id, language, skipHooks)\n  const newId = await insert(orama, doc, language, skipHooks)\n\n  if (!skipHooks && orama.afterUpdate) {\n    await runSingleHook(orama.afterUpdate, orama, newId)\n  }\n\n  return newId\n}\n\nexport async function updateMultiple(\n  orama: Orama,\n  ids: string[],\n  docs: Document[],\n  batchSize?: number,\n  language?: string,\n  skipHooks?: boolean,\n): Promise<string[]> {\n  if (!skipHooks) {\n    await runMultipleHook(orama.beforeMultipleUpdate, orama, ids)\n  }\n\n  // Validate all documents before the insertion\n  const docsLength = docs.length\n  for (let i = 0; i < docsLength; i++) {\n    const errorProperty = await orama.validateSchema(docs[i], orama.schema)\n    if (errorProperty) {\n      throw createError('SCHEMA_VALIDATION_FAILURE', errorProperty)\n    }\n  }\n\n  await removeMultiple(orama, ids, batchSize, language, skipHooks)\n  const newIds = await innerInsertMultiple(orama, docs, batchSize, language, skipHooks)\n\n  if (!skipHooks) {\n    await runMultipleHook(orama.afterMultipleUpdate, orama, newIds)\n  }\n\n  return newIds\n}\n"],"names":["runMultipleHook","runSingleHook","createError","innerInsertMultiple","insert","remove","removeMultiple","update","orama","id","doc","language","skipHooks","beforeUpdate","newId","afterUpdate","updateMultiple","ids","docs","batchSize","beforeMultipleUpdate","docsLength","length","i","errorProperty","validateSchema","schema","newIds","afterMultipleUpdate"],"mappings":"AAAA,SAASA,eAAe,EAAEC,aAAa,QAAQ,yBAAwB;AACvE,SAASC,WAAW,QAAQ,eAAc;AAE1C,SAASC,mBAAmB,EAAEC,MAAM,QAAQ,cAAa;AACzD,SAASC,MAAM,EAAEC,cAAc,QAAQ,cAAa;AAEpD,OAAO,eAAeC,OACpBC,KAAY,EACZC,EAAU,EACVC,GAAa,EACbC,QAAiB,EACjBC,SAAmB,EACF;IACjB,IAAI,CAACA,aAAaJ,MAAMK,YAAY,EAAE;QACpC,MAAMZ,cAAcO,MAAMK,YAAY,EAAEL,OAAOC;IACjD,CAAC;IAED,MAAMJ,OAAOG,OAAOC,IAAIE,UAAUC;IAClC,MAAME,QAAQ,MAAMV,OAAOI,OAAOE,KAAKC,UAAUC;IAEjD,IAAI,CAACA,aAAaJ,MAAMO,WAAW,EAAE;QACnC,MAAMd,cAAcO,MAAMO,WAAW,EAAEP,OAAOM;IAChD,CAAC;IAED,OAAOA;AACT,CAAC;AAED,OAAO,eAAeE,eACpBR,KAAY,EACZS,GAAa,EACbC,IAAgB,EAChBC,SAAkB,EAClBR,QAAiB,EACjBC,SAAmB,EACA;IACnB,IAAI,CAACA,WAAW;QACd,MAAMZ,gBAAgBQ,MAAMY,oBAAoB,EAAEZ,OAAOS;IAC3D,CAAC;IAED,8CAA8C;IAC9C,MAAMI,aAAaH,KAAKI,MAAM;IAC9B,IAAK,IAAIC,IAAI,GAAGA,IAAIF,YAAYE,IAAK;QACnC,MAAMC,gBAAgB,MAAMhB,MAAMiB,cAAc,CAACP,IAAI,CAACK,EAAE,EAAEf,MAAMkB,MAAM;QACtE,IAAIF,eAAe;YACjB,MAAMtB,YAAY,6BAA6BsB,eAAc;QAC/D,CAAC;IACH;IAEA,MAAMlB,eAAeE,OAAOS,KAAKE,WAAWR,UAAUC;IACtD,MAAMe,SAAS,MAAMxB,oBAAoBK,OAAOU,MAAMC,WAAWR,UAAUC;IAE3E,IAAI,CAACA,WAAW;QACd,MAAMZ,gBAAgBQ,MAAMoB,mBAAmB,EAAEpB,OAAOmB;IAC1D,CAAC;IAED,OAAOA;AACT,CAAC"}