{"version":3,"sources":["../../src/components/documents-store.ts"],"sourcesContent":["import { Document, IDocumentsStore, OpaqueDocumentStore } from '../types.js'\n\nexport interface DocumentsStore extends OpaqueDocumentStore {\n  docs: Record<string, Document | undefined>\n  count: number\n}\n\nexport type DefaultDocumentsStore = IDocumentsStore<DocumentsStore>\n\nexport async function create(): Promise<DocumentsStore> {\n  return {\n    docs: {},\n    count: 0,\n  }\n}\n\nexport async function get(store: DocumentsStore, id: string): Promise<Document | undefined> {\n  return store.docs[id]\n}\n\nexport async function getMultiple(store: DocumentsStore, ids: string[]): Promise<(Document | undefined)[]> {\n  const found: (Document | undefined)[] = Array.from({ length: ids.length })\n\n  for (let i = 0; i < ids.length; i++) {\n    found[i] = store.docs[ids[i]]\n  }\n\n  return found\n}\n\nexport async function getAll(store: DocumentsStore): Promise<Record<string, Document>> {\n  return store.docs as Record<string, Document>\n}\n\nexport async function store(store: DocumentsStore, id: string, doc: Document): Promise<boolean> {\n  if (typeof store.docs[id] !== 'undefined') {\n    return false\n  }\n\n  store.docs[id] = doc\n  store.count++\n\n  return true\n}\n\nexport async function remove(store: DocumentsStore, id: string): Promise<boolean> {\n  if (typeof store.docs[id] === 'undefined') {\n    return false\n  }\n\n  delete store.docs[id]\n  store.count--\n\n  return true\n}\n\nexport async function count(store: DocumentsStore): Promise<number> {\n  return store.count\n}\n\nexport async function load<R = unknown>(raw: R): Promise<DocumentsStore> {\n  const rawDocument = raw as DocumentsStore\n\n  return {\n    docs: rawDocument.docs,\n    count: rawDocument.count,\n  }\n}\n\nexport async function save<R = unknown>(store: DocumentsStore): Promise<R> {\n  return {\n    docs: store.docs,\n    count: store.count,\n  } as R\n}\n\nexport async function createDocumentsStore(): Promise<DefaultDocumentsStore> {\n  return {\n    create,\n    get,\n    getMultiple,\n    getAll,\n    store,\n    remove,\n    count,\n    load,\n    save,\n  }\n}\n"],"names":["create","docs","count","get","store","id","getMultiple","ids","found","Array","from","length","i","getAll","doc","remove","load","raw","rawDocument","save","createDocumentsStore"],"mappings":"AASA,OAAO,eAAeA,SAAkC;IACtD,OAAO;QACLC,MAAM,CAAC;QACPC,OAAO;IACT;AACF,CAAC;AAED,OAAO,eAAeC,IAAIC,KAAqB,EAAEC,EAAU,EAAiC;IAC1F,OAAOD,MAAMH,IAAI,CAACI,GAAG;AACvB,CAAC;AAED,OAAO,eAAeC,YAAYF,KAAqB,EAAEG,GAAa,EAAqC;IACzG,MAAMC,QAAkCC,MAAMC,IAAI,CAAC;QAAEC,QAAQJ,IAAII,MAAM;IAAC;IAExE,IAAK,IAAIC,IAAI,GAAGA,IAAIL,IAAII,MAAM,EAAEC,IAAK;QACnCJ,KAAK,CAACI,EAAE,GAAGR,MAAMH,IAAI,CAACM,GAAG,CAACK,EAAE,CAAC;IAC/B;IAEA,OAAOJ;AACT,CAAC;AAED,OAAO,eAAeK,OAAOT,KAAqB,EAAqC;IACrF,OAAOA,MAAMH,IAAI;AACnB,CAAC;AAED,OAAO,eAAeG,MAAMA,KAAqB,EAAEC,EAAU,EAAES,GAAa,EAAoB;IAC9F,IAAI,OAAOV,MAAMH,IAAI,CAACI,GAAG,KAAK,aAAa;QACzC,OAAO,KAAK;IACd,CAAC;IAEDD,MAAMH,IAAI,CAACI,GAAG,GAAGS;IACjBV,MAAMF,KAAK;IAEX,OAAO,IAAI;AACb,CAAC;AAED,OAAO,eAAea,OAAOX,KAAqB,EAAEC,EAAU,EAAoB;IAChF,IAAI,OAAOD,MAAMH,IAAI,CAACI,GAAG,KAAK,aAAa;QACzC,OAAO,KAAK;IACd,CAAC;IAED,OAAOD,MAAMH,IAAI,CAACI,GAAG;IACrBD,MAAMF,KAAK;IAEX,OAAO,IAAI;AACb,CAAC;AAED,OAAO,eAAeA,MAAME,KAAqB,EAAmB;IAClE,OAAOA,MAAMF,KAAK;AACpB,CAAC;AAED,OAAO,eAAec,KAAkBC,GAAM,EAA2B;IACvE,MAAMC,cAAcD;IAEpB,OAAO;QACLhB,MAAMiB,YAAYjB,IAAI;QACtBC,OAAOgB,YAAYhB,KAAK;IAC1B;AACF,CAAC;AAED,OAAO,eAAeiB,KAAkBf,KAAqB,EAAc;IACzE,OAAO;QACLH,MAAMG,MAAMH,IAAI;QAChBC,OAAOE,MAAMF,KAAK;IACpB;AACF,CAAC;AAED,OAAO,eAAekB,uBAAuD;IAC3E,OAAO;QACLpB;QACAG;QACAG;QACAO;QACAT;QACAW;QACAb;QACAc;QACAG;IACF;AACF,CAAC"}