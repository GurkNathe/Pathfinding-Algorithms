{"version":3,"sources":["../../src/cjs/index.cts"],"sourcesContent":["import type { create as esmCreate } from '../methods/create.js'\nimport type { count as esmCount, getByID as esmGetByID } from '../methods/docs.js'\nimport type { insert as esmInsert, insertMultiple as esminsertMultiple } from '../methods/insert.js'\nimport type { remove as esmRemove, removeMultiple as esmRemoveMultiple } from '../methods/remove.js'\nimport type { search as esmSearch } from '../methods/search.js'\nimport type { load as esmLoad, save as esmSave } from '../methods/serialization.js'\nimport type { update as esmUpdate, updateMultiple as esmUpdateMultiple } from '../methods/update.js'\n\nlet _esmCount: typeof esmCount\nlet _esmCreate: typeof esmCreate\nlet _esmGetByID: typeof esmGetByID\nlet _esmInsert: typeof esmInsert\nlet _esmInsertMultiple: typeof esminsertMultiple\nlet _esmLoad: typeof esmLoad\nlet _esmRemove: typeof esmRemove\nlet _esmRemoveMultiple: typeof esmRemoveMultiple\nlet _esmSave: typeof esmSave\nlet _esmSearch: typeof esmSearch\nlet _esmUpdate: typeof esmUpdate\nlet _esmUpdateMultiple: typeof esmUpdateMultiple\n\nexport async function count(...args: Parameters<typeof esmCount>): ReturnType<typeof esmCount> {\n  if (!_esmCount) {\n    const imported = await import('../methods/docs.js')\n    _esmCount = imported.count\n  }\n\n  return _esmCount(...args)\n}\n\nexport async function create(...args: Parameters<typeof esmCreate>): ReturnType<typeof esmCreate> {\n  if (!_esmCreate) {\n    const imported = await import('../methods/create.js')\n    _esmCreate = imported.create\n  }\n\n  return _esmCreate(...args)\n}\n\nexport async function getByID(...args: Parameters<typeof esmGetByID>): ReturnType<typeof esmGetByID> {\n  if (!_esmGetByID) {\n    const imported = await import('../methods/docs.js')\n    _esmGetByID = imported.getByID\n  }\n\n  return _esmGetByID(...args)\n}\n\nexport async function insert(...args: Parameters<typeof esmInsert>): ReturnType<typeof esmInsert> {\n  if (!_esmInsert) {\n    const imported = await import('../methods/insert.js')\n    _esmInsert = imported.insert\n  }\n\n  return _esmInsert(...args)\n}\n\nexport async function insertMultiple(\n  ...args: Parameters<typeof esminsertMultiple>\n): ReturnType<typeof esminsertMultiple> {\n  if (!_esmInsertMultiple) {\n    const imported = await import('../methods/insert.js')\n    _esmInsertMultiple = imported.insertMultiple\n  }\n\n  return _esmInsertMultiple(...args)\n}\n\nexport async function load(...args: Parameters<typeof esmLoad>): ReturnType<typeof esmLoad> {\n  if (!_esmLoad) {\n    const imported = await import('../methods/serialization.js')\n    _esmLoad = imported.load\n  }\n\n  return _esmLoad(...args)\n}\n\nexport async function remove(...args: Parameters<typeof esmRemove>): ReturnType<typeof esmRemove> {\n  if (!_esmRemove) {\n    const imported = await import('../methods/remove.js')\n    _esmRemove = imported.remove\n  }\n\n  return _esmRemove(...args)\n}\n\nexport async function removeMultiple(\n  ...args: Parameters<typeof esmRemoveMultiple>\n): ReturnType<typeof esmRemoveMultiple> {\n  if (!_esmRemoveMultiple) {\n    const imported = await import('../methods/remove.js')\n    _esmRemoveMultiple = imported.removeMultiple\n  }\n\n  return _esmRemoveMultiple(...args)\n}\n\nexport async function save(...args: Parameters<typeof esmSave>): ReturnType<typeof esmSave> {\n  if (!_esmSave) {\n    const imported = await import('../methods/serialization.js')\n    _esmSave = imported.save\n  }\n\n  return _esmSave(...args)\n}\n\nexport async function search(...args: Parameters<typeof esmSearch>): ReturnType<typeof esmSearch> {\n  if (!_esmSearch) {\n    const imported = await import('../methods/search.js')\n    _esmSearch = imported.search\n  }\n\n  return _esmSearch(...args)\n}\n\nexport async function update(...args: Parameters<typeof esmUpdate>): ReturnType<typeof esmUpdate> {\n  if (!_esmUpdate) {\n    const imported = await import('../methods/update.js')\n    _esmUpdate = imported.update\n  }\n\n  return _esmUpdate(...args)\n}\n\nexport async function updateMultiple(\n  ...args: Parameters<typeof esmUpdateMultiple>\n): ReturnType<typeof esmUpdateMultiple> {\n  if (!_esmUpdateMultiple) {\n    const imported = await import('../methods/update.js')\n    _esmUpdateMultiple = imported.updateMultiple\n  }\n\n  return _esmUpdateMultiple(...args)\n}\n\nexport * as components from './components/defaults.cjs'\nexport * as internals from './internals.cjs'\n"],"names":["count","create","getByID","insert","insertMultiple","load","remove","removeMultiple","save","search","update","updateMultiple","components","internals","_esmCount","_esmCreate","_esmGetByID","_esmInsert","_esmInsertMultiple","_esmLoad","_esmRemove","_esmRemoveMultiple","_esmSave","_esmSearch","_esmUpdate","_esmUpdateMultiple","args","imported"],"mappings":"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"}