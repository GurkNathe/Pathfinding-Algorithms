{"version":3,"sources":["../../src/methods/create.ts"],"sourcesContent":["import { formatElapsedTime, getDocumentIndexId, getDocumentProperties, validateSchema } from '../components/defaults.js'\nimport { createDocumentsStore } from '../components/documents-store.js'\nimport { OBJECT_COMPONENTS, FUNCTION_COMPONENTS, SINGLE_OR_ARRAY_COMPONENTS } from '../components/hooks.js'\nimport { createIndex } from '../components/index.js'\nimport { createTokenizer } from '../components/tokenizer/index.js'\nimport { createError } from '../errors.js'\nimport { uniqueId } from '../utils.js'\nimport {\n  ArrayCallbackComponents,\n  Components,\n  Orama,\n  Schema,\n  FunctionComponents,\n  SingleOrArrayCallbackComponents,\n  Tokenizer,\n  SorterConfig,\n  OpaqueIndex,\n  OpaqueDocumentStore,\n  OpaqueSorter,\n  ProvidedTypes,\n} from '../types.js'\nimport { createSorter } from '../components/sorter.js'\n\ninterface CreateArguments<P extends ProvidedTypes> {\n  schema: Schema\n  sort?: SorterConfig\n  language?: string\n  components?: Components<P>\n  id?: string\n}\n\nfunction validateComponents<P extends ProvidedTypes>(components: Components<P>) {\n  const defaultComponents = {\n    formatElapsedTime,\n    getDocumentIndexId,\n    getDocumentProperties,\n    validateSchema,\n  }\n\n  for (const rawKey of FUNCTION_COMPONENTS) {\n    const key = rawKey as keyof FunctionComponents\n\n    if (components[key]) {\n      if (typeof components[key] !== 'function') {\n        throw createError('COMPONENT_MUST_BE_FUNCTION', key)\n      }\n    } else {\n      // @ts-expect-error TSC is unable to resolve this\n      components[key] = defaultComponents[key]\n    }\n  }\n\n  for (const rawKey of SINGLE_OR_ARRAY_COMPONENTS) {\n    const key = rawKey as keyof ArrayCallbackComponents<P>\n\n    if (!components[key]) {\n      components[key] = []\n    } else if (!Array.isArray(components[key])) {\n      // @ts-expect-error TSC is unable to resolve this\n      components[key] = [components[key]]\n    }\n\n    for (const fn of components[key] as unknown as SingleOrArrayCallbackComponents<P>[]) {\n      if (typeof fn !== 'function') {\n        throw createError('COMPONENT_MUST_BE_FUNCTION_OR_ARRAY_FUNCTIONS', key)\n      }\n    }\n  }\n\n  for (const rawKey of Object.keys(components)) {\n    if (\n      !OBJECT_COMPONENTS.includes(rawKey) &&\n      !FUNCTION_COMPONENTS.includes(rawKey) &&\n      !SINGLE_OR_ARRAY_COMPONENTS.includes(rawKey)\n    ) {\n      throw createError('UNSUPPORTED_COMPONENT', rawKey)\n    }\n  }\n}\n\nexport async function create<P extends ProvidedTypes>({\n  schema,\n  sort,\n  language,\n  components,\n  id,\n}: CreateArguments<P>): Promise<Orama<P>> {\n  if (!components) {\n    components = {}\n  }\n\n  if (!id) {\n    id = await uniqueId()\n  }\n\n  let tokenizer = components.tokenizer as Tokenizer\n  let index: OpaqueIndex | undefined = components.index\n  let documentsStore: OpaqueDocumentStore | undefined = components.documentsStore\n  let sorter: OpaqueSorter | undefined = components.sorter\n\n  if (!tokenizer) {\n    // Use the default tokenizer\n    tokenizer = await createTokenizer({ language: language ?? 'english' })\n  } else if (!tokenizer.tokenize) {\n    // If there is no tokenizer function, we assume this is a TokenizerConfig\n    tokenizer = await createTokenizer(tokenizer)\n  }\n\n  if (components.tokenizer && language) {\n    // Accept language only if a tokenizer is not provided\n    throw createError('NO_LANGUAGE_WITH_CUSTOM_TOKENIZER')\n  }\n\n  if (!index) {\n    index = await createIndex()\n  }\n\n  if (!sorter) {\n    sorter = await createSorter()\n  }\n\n  if (!documentsStore) {\n    documentsStore = await createDocumentsStore()\n  }\n\n  // Validate all other components\n  validateComponents(components)\n\n  // Assign only recognized components and hooks\n  const {\n    getDocumentProperties,\n    getDocumentIndexId,\n    validateSchema,\n    beforeInsert,\n    afterInsert,\n    beforeRemove,\n    afterRemove,\n    beforeUpdate,\n    afterUpdate,\n    beforeMultipleInsert,\n    afterMultipleInsert,\n    beforeMultipleRemove,\n    afterMultipleRemove,\n    beforeMultipleUpdate,\n    afterMultipleUpdate,\n    formatElapsedTime,\n  } = components\n\n  const orama = {\n    data: {},\n    caches: {},\n    schema,\n    tokenizer,\n    index,\n    sorter,\n    documentsStore,\n    getDocumentProperties,\n    getDocumentIndexId,\n    validateSchema,\n    beforeInsert,\n    afterInsert,\n    beforeRemove,\n    afterRemove,\n    beforeUpdate,\n    afterUpdate,\n    beforeMultipleInsert,\n    afterMultipleInsert,\n    beforeMultipleRemove,\n    afterMultipleRemove,\n    beforeMultipleUpdate,\n    afterMultipleUpdate,\n    formatElapsedTime,\n    id,\n  } as Orama\n\n  orama.data = {\n    index: await orama.index.create(orama, schema),\n    docs: await orama.documentsStore.create(orama),\n    sorting: await orama.sorter.create(orama, schema, sort),\n  }\n\n  return orama\n}\n"],"names":["formatElapsedTime","getDocumentIndexId","getDocumentProperties","validateSchema","createDocumentsStore","OBJECT_COMPONENTS","FUNCTION_COMPONENTS","SINGLE_OR_ARRAY_COMPONENTS","createIndex","createTokenizer","createError","uniqueId","createSorter","validateComponents","components","defaultComponents","rawKey","key","Array","isArray","fn","Object","keys","includes","create","schema","sort","language","id","tokenizer","index","documentsStore","sorter","tokenize","beforeInsert","afterInsert","beforeRemove","afterRemove","beforeUpdate","afterUpdate","beforeMultipleInsert","afterMultipleInsert","beforeMultipleRemove","afterMultipleRemove","beforeMultipleUpdate","afterMultipleUpdate","orama","data","caches","docs","sorting"],"mappings":"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"}