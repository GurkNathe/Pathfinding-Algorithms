import { ISorter, OpaqueSorter, SortType } from '../types.js';
interface PropertySort<K> {
    docs: Record<string, number>;
    orderedDocs: [string, K][];
    type: SortType;
}
export interface Sorter extends OpaqueSorter {
    enabled: boolean;
    sortableProperties: string[];
    sortablePropertiesWithTypes: Record<string, SortType>;
    sorts: Record<string, PropertySort<number | string | boolean>>;
}
export type DefaultSorter = ISorter<Sorter>;
export declare function load<R = unknown>(raw: R): Promise<Sorter>;
export declare function save<R = unknown>(sorter: Sorter): Promise<R>;
export declare function createSorter(): Promise<DefaultSorter>;
export {};
