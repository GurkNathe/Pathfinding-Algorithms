{"version":3,"sources":["../src/errors.ts"],"sourcesContent":["import { SUPPORTED_LANGUAGES } from './components/tokenizer/languages.js'\nimport { sprintf } from './utils.js'\n\nconst allLanguages = SUPPORTED_LANGUAGES.join('\\n - ')\n\nconst errors = {\n  NO_LANGUAGE_WITH_CUSTOM_TOKENIZER: 'Do not pass the language option to create when using a custom tokenizer.',\n  LANGUAGE_NOT_SUPPORTED: `Language \"%s\" is not supported.\\nSupported languages are:\\n - ${allLanguages}`,\n  INVALID_STEMMER_FUNCTION_TYPE: `config.stemmer property must be a function.`,\n  MISSING_STEMMER: `As of version 1.0.0 @orama/orama does not ship non English stemmers by default. To solve this, please explicitly import and specify the \"%s\" stemmer from the package @orama/stemmers. See https://docs.oramasearch.com/text-analysis/stemming for more information.`,\n  CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY: 'Custom stop words array must only contain strings.',\n  UNSUPPORTED_COMPONENT: `Unsupported component \"%s\".`,\n  COMPONENT_MUST_BE_FUNCTION: `The component \"%s\" must be a function.`,\n  COMPONENT_MUST_BE_FUNCTION_OR_ARRAY_FUNCTIONS: `The component \"%s\" must be a function or an array of functions.`,\n  INVALID_SCHEMA_TYPE: `Unsupported schema type \"%s\" at \"%s\". Expected \"string\", \"boolean\" or \"number\" or array of them.`,\n  DOCUMENT_ID_MUST_BE_STRING: `Document id must be of type \"string\". Got \"%s\" instead.`,\n  DOCUMENT_ALREADY_EXISTS: `A document with id \"%s\" already exists.`,\n  DOCUMENT_DOES_NOT_EXIST: `A document with id \"%s\" does not exists.`,\n  MISSING_DOCUMENT_PROPERTY: `Missing searchable property \"%s\".`,\n  INVALID_DOCUMENT_PROPERTY: `Invalid document property \"%s\": expected \"%s\", got \"%s\"`,\n  UNKNOWN_INDEX: `Invalid property name \"%s\". Expected a wildcard string (\"*\") or array containing one of the following properties: %s`,\n  INVALID_BOOST_VALUE: `Boost value must be a number greater than, or less than 0.`,\n  INVALID_FILTER_OPERATION: `You can only use one operation per filter, you requested %d.`,\n  SCHEMA_VALIDATION_FAILURE: `Cannot insert document due schema validation failure on \"%s\" property.`,\n  INVALID_SORT_SCHEMA_TYPE: `Unsupported sort schema type \"%s\" at \"%s\". Expected \"string\" or \"number\".`,\n  CANNOT_SORT_BY_ARRAY: `Cannot configure sort for \"%s\" because it is an array (%s).`,\n  UNABLE_TO_SORT_ON_UNKNOWN_FIELD: `Unable to sort on unknown field \"%s\". Allowed fields: %s`,\n  SORT_DISABLED: `Sort is disabled. Please read the documentation at https://docs.oramasearch for more information.`,\n  UNKNOWN_GROUP_BY_PROPERTY: `Unknown groupBy property \"%s\".`,\n  INVALID_GROUP_BY_PROPERTY: `Invalid groupBy property \"%s\". Allowed types: \"%s\", but given \"%s\".`,\n}\n\nexport type ErrorCode = keyof typeof errors\n\nexport interface OramaError extends Error {\n  code: string\n}\n\nexport function createError(code: ErrorCode, ...args: Array<string | number>): OramaError {\n  const error = new Error(sprintf(errors[code] ?? `Unsupported Orama Error code: ${code}`, ...args)) as OramaError\n  error.code = code\n  if ('captureStackTrace' in Error.prototype) {\n    Error.captureStackTrace(error)\n  }\n\n  return error\n}\n"],"names":["SUPPORTED_LANGUAGES","sprintf","allLanguages","join","errors","NO_LANGUAGE_WITH_CUSTOM_TOKENIZER","LANGUAGE_NOT_SUPPORTED","INVALID_STEMMER_FUNCTION_TYPE","MISSING_STEMMER","CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY","UNSUPPORTED_COMPONENT","COMPONENT_MUST_BE_FUNCTION","COMPONENT_MUST_BE_FUNCTION_OR_ARRAY_FUNCTIONS","INVALID_SCHEMA_TYPE","DOCUMENT_ID_MUST_BE_STRING","DOCUMENT_ALREADY_EXISTS","DOCUMENT_DOES_NOT_EXIST","MISSING_DOCUMENT_PROPERTY","INVALID_DOCUMENT_PROPERTY","UNKNOWN_INDEX","INVALID_BOOST_VALUE","INVALID_FILTER_OPERATION","SCHEMA_VALIDATION_FAILURE","INVALID_SORT_SCHEMA_TYPE","CANNOT_SORT_BY_ARRAY","UNABLE_TO_SORT_ON_UNKNOWN_FIELD","SORT_DISABLED","UNKNOWN_GROUP_BY_PROPERTY","INVALID_GROUP_BY_PROPERTY","createError","code","args","error","Error","prototype","captureStackTrace"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,sCAAqC;AACzE,SAASC,OAAO,QAAQ,aAAY;AAEpC,MAAMC,eAAeF,oBAAoBG,IAAI,CAAC;AAE9C,MAAMC,SAAS;IACbC,mCAAmC;IACnCC,wBAAwB,CAAC,8DAA8D,EAAEJ,aAAa,CAAC;IACvGK,+BAA+B,CAAC,2CAA2C,CAAC;IAC5EC,iBAAiB,CAAC,oQAAoQ,CAAC;IACvRC,6CAA6C;IAC7CC,uBAAuB,CAAC,2BAA2B,CAAC;IACpDC,4BAA4B,CAAC,sCAAsC,CAAC;IACpEC,+CAA+C,CAAC,+DAA+D,CAAC;IAChHC,qBAAqB,CAAC,gGAAgG,CAAC;IACvHC,4BAA4B,CAAC,uDAAuD,CAAC;IACrFC,yBAAyB,CAAC,uCAAuC,CAAC;IAClEC,yBAAyB,CAAC,wCAAwC,CAAC;IACnEC,2BAA2B,CAAC,iCAAiC,CAAC;IAC9DC,2BAA2B,CAAC,uDAAuD,CAAC;IACpFC,eAAe,CAAC,oHAAoH,CAAC;IACrIC,qBAAqB,CAAC,0DAA0D,CAAC;IACjFC,0BAA0B,CAAC,4DAA4D,CAAC;IACxFC,2BAA2B,CAAC,sEAAsE,CAAC;IACnGC,0BAA0B,CAAC,yEAAyE,CAAC;IACrGC,sBAAsB,CAAC,2DAA2D,CAAC;IACnFC,iCAAiC,CAAC,wDAAwD,CAAC;IAC3FC,eAAe,CAAC,iGAAiG,CAAC;IAClHC,2BAA2B,CAAC,8BAA8B,CAAC;IAC3DC,2BAA2B,CAAC,mEAAmE,CAAC;AAClG;AAQA,OAAO,SAASC,YAAYC,IAAe,EAAE,GAAGC,IAA4B,EAAc;IACxF,MAAMC,QAAQ,IAAIC,MAAMhC,QAAQG,MAAM,CAAC0B,KAAK,IAAI,CAAC,8BAA8B,EAAEA,KAAK,CAAC,KAAKC;IAC5FC,MAAMF,IAAI,GAAGA;IACb,IAAI,uBAAuBG,MAAMC,SAAS,EAAE;QAC1CD,MAAME,iBAAiB,CAACH;IAC1B,CAAC;IAED,OAAOA;AACT,CAAC"}