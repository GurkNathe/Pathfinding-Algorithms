{"version":3,"sources":["../../src/trees/avl.ts"],"sourcesContent":["export type Node<K, V> = {\n  key: K\n  value: V\n  left: Node<K, V> | null\n  right: Node<K, V> | null\n  height: number\n}\n\nconst BALANCE_STATE = {\n  UNBALANCED_RIGHT: -2,\n  SLIGHTLY_UNBALANCED_RIGHT: -1,\n  BALANCED: 0,\n  SLIGHTLY_UNBALANCED_LEFT: 1,\n  UNBALANCED_LEFT: 2,\n}\n\nfunction getHeight<K, V>(node: Node<K, V> | null): number {\n  return node ? node.height : -1\n}\n\nfunction rotateLeft<K, V>(node: Node<K, V>): Node<K, V> {\n  const right = node.right as Node<K, V>\n  node.right = right.left\n  right.left = node\n  node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1\n  right.height = Math.max(getHeight(right.left), getHeight(right.right)) + 1\n  return right\n}\n\nfunction rotateRight<K, V>(node: Node<K, V>): Node<K, V> {\n  const left = node.left as Node<K, V>\n  node.left = left.right\n  left.right = node\n  node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1\n  left.height = Math.max(getHeight(left.left), getHeight(left.right)) + 1\n  return left\n}\n\nexport function contains<K, V>(node: Node<K, V>, key: K): boolean {\n  return !!find(node, key)\n}\n\nexport function getSize<K, V>(root: Node<K, V> | null): number {\n  let size = 0;\n  const queue: Array<Node<K, V>> = [];\n\n  if (root !== null) {\n    queue.push(root);\n  }\n\n  while (queue.length > 0) {\n    const node = queue.shift() as Node<K, V>;\n    size++;\n\n    if (node.left !== null) {\n      queue.push(node.left);\n    }\n\n    if (node.right !== null) {\n      queue.push(node.right);\n    }\n  }\n\n  return size;\n}\n\nexport function isBalanced<K, V>(root: Node<K, V> | null): boolean {\n  if (root === null)\n    return true;\n\n  const stack: Node<K, V>[] = [root];\n\n  while (stack.length > 0) {\n    const node = stack.pop();\n\n    if (node === undefined)\n      return true;\n\n    const heightDiff = getHeight(node.left) - getHeight(node.right);\n\n    if (heightDiff > 1 || heightDiff < -1) {\n      return false;\n    }\n\n    if (node.right !== null) {\n      stack.push(node.right);\n    }\n\n    if (node.left !== null) {\n      stack.push(node.left);\n    }\n  }\n\n  return true;\n}\n\nexport function rangeSearch<K, V>(node: Node<K, V>, min: K, max: K): V {\n  if (!node) {\n    return [] as unknown as V\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const result: V[] = []\n\n  function traverse(node: Node<K, V>) {\n    if (!node) {\n      return\n    }\n\n    if (node.key > min) {\n      traverse(node.left as Node<K, V>)\n    }\n\n    if (node.key >= min && node.key <= max) {\n      result.push(...(node.value as V[]))\n    }\n\n    if (node.key < max) {\n      traverse(node.right as Node<K, V>)\n    }\n  }\n\n  traverse(node)\n\n  return result as V\n}\n\nexport function greaterThan<K, V>(node: Node<K, V>, key: K, inclusive = false): V {\n  if (!node) {\n    return [] as unknown as V\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const result: V[] = []\n\n  function traverse(node: Node<K, V>) {\n    if (!node) {\n      return\n    }\n\n    if (inclusive && node.key >= key) {\n      result.push(...(node.value as V[]))\n    }\n\n    if (!inclusive && node.key > key) {\n      result.push(...(node.value as V[]))\n    }\n\n    traverse(node.left as Node<K, V>)\n    traverse(node.right as Node<K, V>)\n  }\n\n  traverse(node)\n\n  return result as V\n}\n\nexport function lessThan<K, V>(node: Node<K, V>, key: K, inclusive = false): V {\n  if (!node) {\n    return [] as unknown as V\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const result: V[] = []\n\n  function traverse(node: Node<K, V>) {\n    if (!node) {\n      return\n    }\n\n    if (inclusive && node.key <= key) {\n      result.push(...(node.value as V[]))\n    }\n\n    if (!inclusive && node.key < key) {\n      result.push(...(node.value as V[]))\n    }\n\n    traverse(node.left as Node<K, V>)\n    traverse(node.right as Node<K, V>)\n  }\n\n  traverse(node)\n\n  return result as V\n}\n\nfunction getNodeByKey<K, V>(node: Node<K, V> | null, key: K): Node<K, V> | null {\n  while (node !== null) {\n    if (key < node.key) {\n      node = node.left;\n    } else if (key > node.key) {\n      node = node.right;\n    } else {\n      return node;\n    }\n  }\n  return null;\n}\n\nexport function create<K, V>(key: K, value: V): Node<K, V> {\n  return {\n    key,\n    value,\n    left: null,\n    right: null,\n    height: 0,\n  }\n}\n\nexport function insert<K, V>(root: Node<K, V>, key: K, value: V): Node<K, V> {\n  let parent = null;\n  let current = root;\n\n  while (current !== null) {\n    parent = current;\n    if (key < current.key) {\n        current = current.left as Node<K, V>;\n    } else if (key > current.key) {\n        current = current.right as Node<K, V>;\n    } else {\n      // assuming value is an array here\n      (current.value as string[]) = (current.value as string[]).concat(value as string);\n      return root;\n    }\n  }\n\n  const newNode = create(key, value);\n\n  if (!parent) {\n      root = newNode; // tree was empty\n  } else if (key < parent.key) {\n      parent.left = newNode;\n  } else {\n      parent.right = newNode;\n  }\n\n  current = newNode;\n\n  while (parent) {\n    const balanceFactor = getHeight(parent.left) - getHeight(parent.right)\n\n    if (balanceFactor === BALANCE_STATE.UNBALANCED_LEFT) {\n        if (key < (parent.left as Node<K, V>).key) {\n            parent = rotateRight(parent);\n        } else {\n            parent.left = rotateLeft(parent.left as Node<K, V>);\n            parent = rotateRight(parent);\n        }\n    }\n\n    if (balanceFactor === BALANCE_STATE.UNBALANCED_RIGHT) {\n        if (key > (parent.right as Node<K, V>).key) {\n            parent = rotateLeft(parent);\n        } else {\n            parent.right = rotateRight(parent.right as Node<K, V>);\n            parent = rotateLeft(parent);\n        }\n    }\n\n    if (parent == root) {\n        break;\n    }\n\n    current = parent;\n    parent = getNodeParent(root, current.key);\n  }\n\n  return root;\n}\n\nfunction getNodeParent<K, V>(root: Node<K, V>, key: K): Node<K, V> | null {\n    let current = root;\n    let parent = null;\n\n    while (current !== null) {\n        if (key < current.key) {\n            parent = current;\n            current = current.left as Node<K, V>;\n        } else if (key > current.key) {\n            parent = current;\n            current = current.right as Node<K, V>;\n        } else {\n            break;\n        }\n    }\n\n    return parent;\n}\n\nexport function find<K, V>(root: Node<K, V>, key: K): V | null {\n  const node = getNodeByKey(root, key)\n  if (!node) {\n    return null\n  }\n  return node.value\n}\n\nexport function remove<K, V>(root: Node<K, V> | null, key: K): Node<K, V> | null {\n  let node = root;\n  let parentNode: Node<K, V> | null = null;\n\n  while (node && node.key !== key) {\n    parentNode = node;\n    if (key < node.key) {\n      node = node.left as Node<K, V>;\n    } else {\n      node = node.right as Node<K, V>;\n    }\n  }\n\n  if (!node) {\n    return null;\n  }\n\n  if (!node.left && !node.right) {\n    if (!parentNode) {\n      // Node to be deleted is root\n      root = null;\n    } else {\n      if (parentNode.left === node) {\n        parentNode.left = null;\n      } else {\n        parentNode.right = null;\n      }\n    }\n  } else if (node.left && node.right) {\n    let minValueNode = node.right;\n    let minValueParent = node;\n\n    while (minValueNode.left) {\n      minValueParent = minValueNode;\n      minValueNode = minValueNode.left;\n    }\n\n    node.key = minValueNode.key;\n\n    if (minValueParent === node) {\n      minValueParent.right = minValueNode.right;\n    } else {\n      minValueParent.left = minValueNode.right;\n    }\n  } else {\n    const childNode = node.left ? node.left : node.right;\n\n    if (!parentNode) {\n      root = childNode as Node<K, V>;\n    } else {\n      if (parentNode.left === node) {\n        parentNode.left = childNode;\n      } else {\n        parentNode.right = childNode;\n      }\n    }\n  }\n\n  return root;\n}\n\nexport function removeDocument<K>(root: Node<K, string[]>, id: string, key: K): void {\n  const node = getNodeByKey(root, key)!\n\n  if (node.value.length === 1) {\n    remove(root, key)\n    return\n  }\n\n  node.value.splice(node.value.indexOf(id), 1)\n}\n"],"names":["BALANCE_STATE","UNBALANCED_RIGHT","SLIGHTLY_UNBALANCED_RIGHT","BALANCED","SLIGHTLY_UNBALANCED_LEFT","UNBALANCED_LEFT","getHeight","node","height","rotateLeft","right","left","Math","max","rotateRight","contains","key","find","getSize","root","size","queue","push","length","shift","isBalanced","stack","pop","undefined","heightDiff","rangeSearch","min","result","traverse","value","greaterThan","inclusive","lessThan","getNodeByKey","create","insert","parent","current","concat","newNode","balanceFactor","getNodeParent","remove","parentNode","minValueNode","minValueParent","childNode","removeDocument","id","splice","indexOf"],"mappings":"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"}