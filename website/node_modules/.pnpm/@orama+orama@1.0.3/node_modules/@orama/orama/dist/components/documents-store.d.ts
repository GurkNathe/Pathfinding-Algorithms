import { Document, IDocumentsStore, OpaqueDocumentStore } from '../types.js';
export interface DocumentsStore extends OpaqueDocumentStore {
    docs: Record<string, Document | undefined>;
    count: number;
}
export type DefaultDocumentsStore = IDocumentsStore<DocumentsStore>;
export declare function create(): Promise<DocumentsStore>;
export declare function get(store: DocumentsStore, id: string): Promise<Document | undefined>;
export declare function getMultiple(store: DocumentsStore, ids: string[]): Promise<(Document | undefined)[]>;
export declare function getAll(store: DocumentsStore): Promise<Record<string, Document>>;
export declare function store(store: DocumentsStore, id: string, doc: Document): Promise<boolean>;
export declare function remove(store: DocumentsStore, id: string): Promise<boolean>;
export declare function count(store: DocumentsStore): Promise<number>;
export declare function load<R = unknown>(raw: R): Promise<DocumentsStore>;
export declare function save<R = unknown>(store: DocumentsStore): Promise<R>;
export declare function createDocumentsStore(): Promise<DefaultDocumentsStore>;
