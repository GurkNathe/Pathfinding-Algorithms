{"version":3,"sources":["../../src/components/hooks.ts"],"sourcesContent":["import { Document, MultipleCallbackComponent, Orama, ProvidedTypes, SingleCallbackComponent } from '../types.js'\n\nexport const OBJECT_COMPONENTS = ['tokenizer', 'index', 'documentsStore', 'sorter']\n\nexport const FUNCTION_COMPONENTS = [\n  'validateSchema',\n  'getDocumentIndexId',\n  'getDocumentProperties',\n  'formatElapsedTime',\n]\n\nexport const SINGLE_OR_ARRAY_COMPONENTS = [\n  'beforeInsert',\n  'afterInsert',\n  'beforeRemove',\n  'afterRemove',\n  'beforeUpdate',\n  'afterUpdate',\n  'beforeMultipleInsert',\n  'afterMultipleInsert',\n  'beforeMultipleRemove',\n  'afterMultipleRemove',\n  'beforeMultipleUpdate',\n  'afterMultipleUpdate',\n]\n\nexport async function runSingleHook<P extends ProvidedTypes>(\n  hooks: SingleCallbackComponent<P>[],\n  orama: Orama<P>,\n  id: string,\n  doc?: Document,\n): Promise<void> {\n  for (let i = 0; i < hooks.length; i++) {\n    await hooks[i](orama, id, doc)\n  }\n}\n\nexport async function runMultipleHook<P extends ProvidedTypes>(\n  hooks: MultipleCallbackComponent<P>[],\n  orama: Orama<P>,\n  docsOrIds: Document[] | string[],\n): Promise<void> {\n  for (let i = 0; i < hooks.length; i++) {\n    await hooks[i](orama, docsOrIds)\n  }\n}\n"],"names":["OBJECT_COMPONENTS","FUNCTION_COMPONENTS","SINGLE_OR_ARRAY_COMPONENTS","runSingleHook","hooks","orama","id","doc","i","length","runMultipleHook","docsOrIds"],"mappings":"AAEA,OAAO,MAAMA,oBAAoB;IAAC;IAAa;IAAS;IAAkB;CAAS,CAAA;AAEnF,OAAO,MAAMC,sBAAsB;IACjC;IACA;IACA;IACA;CACD,CAAA;AAED,OAAO,MAAMC,6BAA6B;IACxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD,CAAA;AAED,OAAO,eAAeC,cACpBC,KAAmC,EACnCC,KAAe,EACfC,EAAU,EACVC,GAAc,EACC;IACf,IAAK,IAAIC,IAAI,GAAGA,IAAIJ,MAAMK,MAAM,EAAED,IAAK;QACrC,MAAMJ,KAAK,CAACI,EAAE,CAACH,OAAOC,IAAIC;IAC5B;AACF,CAAC;AAED,OAAO,eAAeG,gBACpBN,KAAqC,EACrCC,KAAe,EACfM,SAAgC,EACjB;IACf,IAAK,IAAIH,IAAI,GAAGA,IAAIJ,MAAMK,MAAM,EAAED,IAAK;QACrC,MAAMJ,KAAK,CAACI,EAAE,CAACH,OAAOM;IACxB;AACF,CAAC"}