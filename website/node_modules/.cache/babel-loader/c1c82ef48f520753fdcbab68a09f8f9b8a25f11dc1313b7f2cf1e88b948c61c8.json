{"ast":null,"code":"var _jsxFileName = \"/home/krug/Coding/Python/Pathfinding-Algorithms/website/src/components/Cell.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cell = _ref => {\n  let {\n    row,\n    col,\n    width = 50,\n    state = \"white\"\n  } = _ref;\n  // const [color, setColor] = useState<States>(state);\n\n  // useEffect(() => {\n  //     setColor(state)\n  // },[state])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: event => {\n      if (state !== \"orange\" && state !== \"blue\") {\n        if (event.nativeEvent.button === 0 && event.nativeEvent.ctrlKey === false) {\n          // setColor(\"black\")\n          state = \"black\";\n        } else if (event.nativeEvent.button === 0 && event.nativeEvent.ctrlKey === true) {\n          // setColor(\"white\")\n          state = \"white\";\n        }\n      }\n    },\n    onMouseOver: event => {\n      if (state !== \"orange\" && state !== \"blue\") {\n        if (event.buttons === 1 && event.ctrlKey === false) {\n          // setColor(\"black\")\n          state = \"black\";\n        } else if (event.buttons === 1 && event.ctrlKey === true) {\n          // setColor(\"white\")\n          state = \"white\";\n        }\n      }\n    },\n    style: {\n      width: `${width}px`,\n      height: `${width}px`,\n      // backgroundColor: color,\n      backgroundColor: state,\n      outline: \"solid\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["Cell","_ref","row","col","width","state","_jsxDEV","onClick","event","nativeEvent","button","ctrlKey","onMouseOver","buttons","style","height","backgroundColor","outline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/krug/Coding/Python/Pathfinding-Algorithms/website/src/components/Cell.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ntype CellProps = {\n    row: number\n    col: number\n    width: number\n    state: States\n}\n\ntype States = \"white\" | \"black\" | \"red\" | \"green\" | \"orange\" | \"blue\";\n\nexport const Cell : React.FC<CellProps> = ({row, col, width = 50, state = \"white\"} : CellProps) => {\n    // const [color, setColor] = useState<States>(state);\n\n    // useEffect(() => {\n    //     setColor(state)\n    // },[state])\n\n    return(\n        <div \n            onClick={(event) => {\n                if (state !== \"orange\" && state !== \"blue\") {\n                    if (event.nativeEvent.button === 0 && \n                        event.nativeEvent.ctrlKey === false) {\n                        // setColor(\"black\")\n                        state = \"black\"\n                    } else if (event.nativeEvent.button === 0 && \n                        event.nativeEvent.ctrlKey === true) {\n                        // setColor(\"white\")\n                        state = \"white\"\n                    }\n                }\n            }}\n            onMouseOver={(event) => {\n                if (state !== \"orange\" && state !== \"blue\") {\n                    if (event.buttons === 1 && event.ctrlKey === false) {\n                        // setColor(\"black\")\n                        state = \"black\"\n                    } else if (event.buttons === 1 && event.ctrlKey === true) {\n                        // setColor(\"white\")\n                        state = \"white\"\n                    }\n                }\n            }}\n            style={{\n                width: `${width}px`,\n                height: `${width}px`,\n                // backgroundColor: color,\n                backgroundColor: state,\n                outline: \"solid\"\n            }}\n        />\n    )\n}"],"mappings":";;AAWA,OAAO,MAAMA,IAA0B,GAAGC,IAAA,IAAyD;EAAA,IAAxD;IAACC,GAAG;IAAEC,GAAG;IAAEC,KAAK,GAAG,EAAE;IAAEC,KAAK,GAAG;EAAmB,CAAC,GAAAJ,IAAA;EAC1F;;EAEA;EACA;EACA;;EAEA,oBACIK,OAAA;IACIC,OAAO,EAAGC,KAAK,IAAK;MAChB,IAAIH,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,MAAM,EAAE;QACxC,IAAIG,KAAK,CAACC,WAAW,CAACC,MAAM,KAAK,CAAC,IAC9BF,KAAK,CAACC,WAAW,CAACE,OAAO,KAAK,KAAK,EAAE;UACrC;UACAN,KAAK,GAAG,OAAO;QACnB,CAAC,MAAM,IAAIG,KAAK,CAACC,WAAW,CAACC,MAAM,KAAK,CAAC,IACrCF,KAAK,CAACC,WAAW,CAACE,OAAO,KAAK,IAAI,EAAE;UACpC;UACAN,KAAK,GAAG,OAAO;QACnB;MACJ;IACJ,CAAE;IACFO,WAAW,EAAGJ,KAAK,IAAK;MACpB,IAAIH,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,MAAM,EAAE;QACxC,IAAIG,KAAK,CAACK,OAAO,KAAK,CAAC,IAAIL,KAAK,CAACG,OAAO,KAAK,KAAK,EAAE;UAChD;UACAN,KAAK,GAAG,OAAO;QACnB,CAAC,MAAM,IAAIG,KAAK,CAACK,OAAO,KAAK,CAAC,IAAIL,KAAK,CAACG,OAAO,KAAK,IAAI,EAAE;UACtD;UACAN,KAAK,GAAG,OAAO;QACnB;MACJ;IACJ,CAAE;IACFS,KAAK,EAAE;MACHV,KAAK,EAAG,GAAEA,KAAM,IAAG;MACnBW,MAAM,EAAG,GAAEX,KAAM,IAAG;MACpB;MACAY,eAAe,EAAEX,KAAK;MACtBY,OAAO,EAAE;IACb;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAC,EAAA,GA1CYtB,IAA0B;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}