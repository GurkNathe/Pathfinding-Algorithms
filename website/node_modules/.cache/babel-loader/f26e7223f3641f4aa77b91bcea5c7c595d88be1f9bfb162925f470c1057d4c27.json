{"ast":null,"code":"export function getNeighbors(grid, pos) {\n  let [i, j] = pos;\n  let neighbors = [];\n  if (i - 1 > 0) {\n    neighbors.push([i - 1, j]);\n  }\n  if (j - 1 > 0) {\n    neighbors.push([i, j - 1]);\n  }\n  if (i + 1 < grid.length) {\n    neighbors.push([i + 1, j]);\n  }\n  if (j + 1 < grid[0].length) {\n    neighbors.push([i, j + 1]);\n  }\n  return neighbors;\n}","map":{"version":3,"names":["getNeighbors","grid","pos","i","j","neighbors","push","length"],"sources":["/home/krug/Coding/Python/Pathfinding-Algorithms/website/src/algorithms/helper.ts"],"sourcesContent":["import { States } from \"../components/Panel\";\n\nexport function getNeighbors(grid: States[][], pos: [number, number]) {\n    let [i, j] = pos;\n\n    let neighbors : [number, number][] = [];\n\n    if (i - 1 > 0) {\n        neighbors.push([i - 1, j]);\n    }\n    if (j - 1 > 0) {\n        neighbors.push([i, j - 1]);\n    }\n    if (i + 1 < grid.length) {\n        neighbors.push([i + 1, j]);\n    }\n    if (j + 1 < grid[0].length) {\n        neighbors.push([i, j + 1]);\n    }\n\n    return neighbors;\n}"],"mappings":"AAEA,OAAO,SAASA,YAAYA,CAACC,IAAgB,EAAEC,GAAqB,EAAE;EAClE,IAAI,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGF,GAAG;EAEhB,IAAIG,SAA8B,GAAG,EAAE;EAEvC,IAAIF,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACXE,SAAS,CAACC,IAAI,CAAC,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,CAAC;EAC9B;EACA,IAAIA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACXC,SAAS,CAACC,IAAI,CAAC,CAACH,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9B;EACA,IAAID,CAAC,GAAG,CAAC,GAAGF,IAAI,CAACM,MAAM,EAAE;IACrBF,SAAS,CAACC,IAAI,CAAC,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,CAAC;EAC9B;EACA,IAAIA,CAAC,GAAG,CAAC,GAAGH,IAAI,CAAC,CAAC,CAAC,CAACM,MAAM,EAAE;IACxBF,SAAS,CAACC,IAAI,CAAC,CAACH,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9B;EAEA,OAAOC,SAAS;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}