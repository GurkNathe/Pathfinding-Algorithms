{"ast":null,"code":"var _jsxFileName = \"/home/krug/Coding/Python/Pathfinding-Algorithms/website/src/components/Cell.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cell = _ref => {\n  _s();\n  let {\n    row,\n    col,\n    width = 50,\n    state = \"white\"\n  } = _ref;\n  const [color, setColor] = useState(state);\n  useEffect(() => {\n    console.log(\"here\");\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: event => {\n      if (state !== \"orange\" && state !== \"blue\") {\n        if (event.nativeEvent.button === 0 && event.nativeEvent.ctrlKey === false) {\n          setColor(\"black\");\n        } else if (event.nativeEvent.button === 0 && event.nativeEvent.ctrlKey === true) {\n          setColor(\"white\");\n        }\n      }\n    },\n    onMouseOver: event => {\n      if (state !== \"orange\" && state !== \"blue\") {\n        if (event.buttons === 1 && event.ctrlKey === false) {\n          setColor(\"black\");\n        } else if (event.buttons === 1 && event.ctrlKey === true) {\n          setColor(\"white\");\n        }\n      }\n    },\n    style: {\n      width: `${width}px`,\n      height: `${width}px`,\n      backgroundColor: color,\n      outline: \"solid\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Cell, \"JeQw1njF1JZEgDjD32smIbzBVTU=\");\n_c = Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Cell","_ref","_s","row","col","width","state","color","setColor","console","log","onClick","event","nativeEvent","button","ctrlKey","onMouseOver","buttons","style","height","backgroundColor","outline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/krug/Coding/Python/Pathfinding-Algorithms/website/src/components/Cell.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ntype CellProps = {\n    row: number\n    col: number\n    width: number\n    state: States\n}\n\ntype States = \"white\" | \"black\" | \"red\" | \"green\" | \"orange\" | \"blue\";\n\nexport const Cell : React.FC<CellProps> = ({row, col, width = 50, state = \"white\"} : CellProps) => {\n    const [color, setColor] = useState<States>(state);\n\n    useEffect(() => {\n        console.log(\"here\")\n    },[state])\n\n    return(\n        <div \n            onClick={(event) => {\n                if (state !== \"orange\" && state !== \"blue\") {\n                    if (event.nativeEvent.button === 0 && \n                        event.nativeEvent.ctrlKey === false) {\n                        setColor(\"black\")\n                    } else if (event.nativeEvent.button === 0 && \n                        event.nativeEvent.ctrlKey === true) {\n                        setColor(\"white\")\n                    }\n                }\n            }}\n            onMouseOver={(event) => {\n                if (state !== \"orange\" && state !== \"blue\") {\n                    if (event.buttons === 1 && event.ctrlKey === false) {\n                        setColor(\"black\")\n                    } else if (event.buttons === 1 && event.ctrlKey === true) {\n                        setColor(\"white\")\n                    }\n                }\n            }}\n            style={{\n                width: `${width}px`,\n                height: `${width}px`,\n                backgroundColor: color,\n                outline: \"solid\"\n            }}\n        />\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW5C,OAAO,MAAMC,IAA0B,GAAGC,IAAA,IAAyD;EAAAC,EAAA;EAAA,IAAxD;IAACC,GAAG;IAAEC,GAAG;IAAEC,KAAK,GAAG,EAAE;IAAEC,KAAK,GAAG;EAAmB,CAAC,GAAAL,IAAA;EAC1F,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAASS,KAAK,CAAC;EAEjDV,SAAS,CAAC,MAAM;IACZa,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACvB,CAAC,EAAC,CAACJ,KAAK,CAAC,CAAC;EAEV,oBACIP,OAAA;IACIY,OAAO,EAAGC,KAAK,IAAK;MAChB,IAAIN,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,MAAM,EAAE;QACxC,IAAIM,KAAK,CAACC,WAAW,CAACC,MAAM,KAAK,CAAC,IAC9BF,KAAK,CAACC,WAAW,CAACE,OAAO,KAAK,KAAK,EAAE;UACrCP,QAAQ,CAAC,OAAO,CAAC;QACrB,CAAC,MAAM,IAAII,KAAK,CAACC,WAAW,CAACC,MAAM,KAAK,CAAC,IACrCF,KAAK,CAACC,WAAW,CAACE,OAAO,KAAK,IAAI,EAAE;UACpCP,QAAQ,CAAC,OAAO,CAAC;QACrB;MACJ;IACJ,CAAE;IACFQ,WAAW,EAAGJ,KAAK,IAAK;MACpB,IAAIN,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,MAAM,EAAE;QACxC,IAAIM,KAAK,CAACK,OAAO,KAAK,CAAC,IAAIL,KAAK,CAACG,OAAO,KAAK,KAAK,EAAE;UAChDP,QAAQ,CAAC,OAAO,CAAC;QACrB,CAAC,MAAM,IAAII,KAAK,CAACK,OAAO,KAAK,CAAC,IAAIL,KAAK,CAACG,OAAO,KAAK,IAAI,EAAE;UACtDP,QAAQ,CAAC,OAAO,CAAC;QACrB;MACJ;IACJ,CAAE;IACFU,KAAK,EAAE;MACHb,KAAK,EAAG,GAAEA,KAAM,IAAG;MACnBc,MAAM,EAAG,GAAEd,KAAM,IAAG;MACpBe,eAAe,EAAEb,KAAK;MACtBc,OAAO,EAAE;IACb;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAvB,EAAA,CArCYF,IAA0B;AAAA0B,EAAA,GAA1B1B,IAA0B;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}