{"ast":null,"code":"import _createClass from\"/home/krug/Coding/Python/Pathfinding-Algorithms/website/node_modules/.pnpm/@babel+runtime@7.22.5/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/home/krug/Coding/Python/Pathfinding-Algorithms/website/node_modules/.pnpm/@babel+runtime@7.22.5/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _slicedToArray from\"/home/krug/Coding/Python/Pathfinding-Algorithms/website/node_modules/.pnpm/@babel+runtime@7.22.5/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";export function getNeighbors(grid,pos){var _pos=_slicedToArray(pos,2),i=_pos[0],j=_pos[1];var neighbors=[];if(i-1>=0&&grid[i-1][j]!==\"black\"){neighbors.push([i-1,j]);}if(j-1>=0&&grid[i][j-1]!==\"black\"){neighbors.push([i,j-1]);}if(i+1<grid.length&&grid[i+1][j]!==\"black\"){neighbors.push([i+1,j]);}if(j+1<grid[0].length&&grid[i][j+1]!==\"black\"){neighbors.push([i,j+1]);}return neighbors;}export function reconstructPath(grid,path,current){while(path.hasOwnProperty(\"\".concat(current[0],\"-\").concat(current[1]))){if(grid[current[0]][current[1]]!==\"orange\"){current=path[\"\".concat(current[0],\"-\").concat(current[1])];if(grid[current[0]][current[1]]!==\"orange\"){grid[current[0]][current[1]]=\"purple\";}}else{break;}}}function manhattan(grid,node1,node2){var _node=_slicedToArray(node1,2),y1=_node[0],x1=_node[1];var _node2=_slicedToArray(node2,2),y2=_node2[0],x2=_node2[1];return Math.abs(x1-x2)+Math.abs(y1-y2);}export function heuristic(type,grid,start,end){switch(type){case\"manhattan\":return manhattan(grid,start,end);default:return manhattan(grid,start,end);}}var QElement=/*#__PURE__*/_createClass(function QElement(element,priority,count){_classCallCheck(this,QElement);this.element=void 0;this.priority=void 0;this.count=void 0;this.element=element;this.priority=priority;this.count=count;});export var PriorityQueue=/*#__PURE__*/function(){function PriorityQueue(){_classCallCheck(this,PriorityQueue);this.items=void 0;this.items=[];}_createClass(PriorityQueue,[{key:\"size\",value:function size(){return this.items.length;}},{key:\"resize\",value:function resize(size){this.items=this.items.slice(0,size);}},{key:\"contains\",value:function contains(element){return this.items.some(function(item){return JSON.stringify(item.element)===JSON.stringify(element);});}},{key:\"enqueue\",value:function enqueue(element,priority,count){var qElement=new QElement(element,priority,count);var contain=false;for(var i=0;i<this.items.length;i++){if(this.items[i].priority>qElement.priority){this.items.splice(i,0,qElement);contain=true;break;}else if(this.items[i].priority===qElement.priority){if(this.items[i].count<qElement.count){this.items.splice(i+1,0,qElement);}else{this.items.splice(i,0,qElement);}contain=true;break;}}if(!contain){this.items.push(qElement);}}},{key:\"dequeue\",value:function dequeue(){if(this.isEmpty()){return;}return this.items.shift().element;}},{key:\"isEmpty\",value:function isEmpty(){return this.items.length===0;}}]);return PriorityQueue;}();","map":{"version":3,"names":["getNeighbors","grid","pos","_pos","_slicedToArray","i","j","neighbors","push","length","reconstructPath","path","current","hasOwnProperty","concat","manhattan","node1","node2","_node","y1","x1","_node2","y2","x2","Math","abs","heuristic","type","start","end","QElement","_createClass","element","priority","count","_classCallCheck","PriorityQueue","items","key","value","size","resize","slice","contains","some","item","JSON","stringify","enqueue","qElement","contain","splice","dequeue","isEmpty","shift"],"sources":["/home/krug/Coding/Python/Pathfinding-Algorithms/website/src/algorithms/helper.ts"],"sourcesContent":["import { States } from \"../components/Panel\";\n\nexport function getNeighbors(grid: States[][], pos: [number, number]) {\n    let [i, j] = pos;\n\n    let neighbors : [number, number][] = [];\n\n    if (i - 1 >= 0 && grid[i - 1][j] !== \"black\") {\n        neighbors.push([i - 1, j]);\n    }\n    if (j - 1 >= 0 && grid[i][j - 1] !== \"black\") {\n        neighbors.push([i, j - 1]);\n    }\n    if (i + 1 < grid.length && grid[i + 1][j] !== \"black\") {\n        neighbors.push([i + 1, j]);\n    }\n    if (j + 1 < grid[0].length && grid[i][j + 1] !== \"black\") {\n        neighbors.push([i, j + 1]);\n    }\n\n    return neighbors;\n}\n\nexport function reconstructPath(grid: States[][], path: any, current: [number, number])  {\n    while (path.hasOwnProperty(`${current[0]}-${current[1]}`)) {\n        if (grid[current[0]][current[1]] !== \"orange\") {\n            current = path[`${current[0]}-${current[1]}`]\n            if (grid[current[0]][current[1]] !== \"orange\") {\n                grid[current[0]][current[1]] = \"purple\";\n            }\n        } else {\n            break;\n        }\n    }\n}\n\nfunction manhattan(grid: States[][], node1: [number, number], node2: [number, number]) {\n    let [y1, x1] = node1;\n    let [y2, x2] = node2;\n\n    return Math.abs(x1 - x2) + Math.abs(y1 - y2);\n}\n\nexport function heuristic(type: string, grid: States[][], start: [number, number], end: [number, number]) {\n    switch(type) {\n        case \"manhattan\":\n            return manhattan(grid, start, end);\n        default:\n            return manhattan(grid, start, end);\n    }\n}\n\nclass QElement {\n    element: any;\n    priority: number;\n    count: number;\n\n    constructor(element : any, priority: number, count: number) {\n        this.element = element;\n        this.priority = priority;\n        this.count = count;\n    }\n}\n\nexport class PriorityQueue {\n    items: QElement[];\n\n    constructor() {\n        this.items = [];\n    }\n\n    size() {\n        return this.items.length;\n    }\n\n    resize(size: number) {\n        this.items = this.items.slice(0, size);\n    }\n\n    contains(element: [number, number]) {\n        return this.items.some((item) => {\n            return JSON.stringify(item.element) === JSON.stringify(element);\n        });\n    }\n\n    enqueue(element: [number, number], priority: number, count: number) {\n        const qElement = new QElement(element, priority, count);\n        let contain = false;\n\n        for (let i = 0; i < this.items.length; i++) {\n            if (this.items[i].priority > qElement.priority) {\n                this.items.splice(i, 0, qElement);\n                contain = true;\n                break;\n            } else if (this.items[i].priority === qElement.priority) {\n                if (this.items[i].count < qElement.count) {\n                    this.items.splice(i + 1, 0, qElement);\n                } else {\n                    this.items.splice(i, 0, qElement);\n                }\n                contain = true;\n                break;\n            }\n        }\n\n        if (!contain) {\n            this.items.push(qElement);\n        }\n    }\n\n    dequeue() {\n        if (this.isEmpty()) {\n            return;\n        }\n\n        return this.items.shift()!.element;\n    }\n\n    isEmpty() {\n        return this.items.length === 0;\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}